<?xml version = "1.0" encoding= "UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
        
 <hibernate-configuration>
        <session-factory>
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</property>
        <property name="hibernate.connection.url"></property>
        <property name="hibernate.connection.username"></property>
        <property name="hibernate.connection.password"></property>
        <property name="show_sql">true</property>
        <property name="hibernate.connection.pool_size">5</property>
        <property name="hibernate.current_session_context_class">thread</property>
        
        
        <!-- We can run Hibernate in 4 different modes: create, update, create-drop, and validate.
		create: Hibernate will purge the existing tables in your DB and create the tables from
		scratch.
		
		update: Hibernate will connect to an existing database and create it from scratch without
		purging it. It will update any entities within our database that are not consistent with our
		mapped Java models. 
		
		create-drop: Hibernate creates all of the tables and then drops them when the application
		stops running. This is good for testing purposes but not ideal in production.
		
		validate: Hibernate will validate a pre-existing schema. This means that it will make sure
		that your Java models are mapped in a way that is consistent with the existing schema.-->
        
        <property name="hibernate.hbm2ddl.auto">validate</property>
        
        <!-- We need to tell Hibernate where the mapped resources are; it doesn't
		auto detect the resources. -->
		
		<mapping class = "com.tuitionexpense.model.Employees"/>
	<!--  	<mapping class = "com.tuitionexpense.model.Card"/>  -->
		<mapping class = "com.tuitionexpense.model.Expense"/>
	<!--  	<mapping class = "com.tuitionexpense.model.Expenses"/>   -->
		
    </session-factory>
 </hibernate-configuration>